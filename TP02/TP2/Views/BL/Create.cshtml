@model TP2.Models.BL

@{
    ViewData["Title"] = "Criar Novo BL";
}

@if (ViewBag.SuccessMessage != null)
{
    <div id="success-alert" class="alert alert-success" role="alert">
        @ViewBag.SuccessMessage
    </div>
}

<h1>@ViewData["Title"]</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">

           <div asp-validation-summary="None" class="text-danger"></div>

            <div class="form-group mb-2">
                <label asp-for="Numero" class="control-label"></label>
                <input asp-for="Numero" class="form-control" />
                <span asp-validation-for="Numero" class="text-danger"></span>
            </div>
            <div class="form-group mb-2">
                <label asp-for="Consignee" class="control-label"></label>
                <input asp-for="Consignee" class="form-control" />
                <span asp-validation-for="Consignee" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Navio" class="control-label"></label>
                <input asp-for="Navio" class="form-control" />
                <span asp-validation-for="Navio" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Criar" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Voltar</a>
            </div>
        </form>
    </div>
</div>

@* scripts de validação e o código para esconder a mensagem *@
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Pega o alerta de sucesso pelo ID
        var successAlert = document.getElementById('success-alert');

        // Se o alerta existir, espera 3 segundos e o remove
        if (successAlert) {
            setTimeout(function() {
                successAlert.style.display = 'none';
            }, 3000); // 3000 milissegundos = 3 segundos
        }
    </script>
}
